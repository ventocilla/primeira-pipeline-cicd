name: CI-CD
on:
  push:
    branches: ["main"]
  workflow_dispatch:
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - name: Obtendo o código
      uses: actions/checkout@v4.2.2
    - name: Autenticação no Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build da Imagem Docker
      uses: docker/build-push-action@v6.9.0
      with:
        context: ./src
        file: ./src/Dockerfile 
        push: true
        tags: |
          vento123/aula-primeira-pipeline:v${{ github.run_number }}
          vento123/aula-primeira-pipeline:latest
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
    # Download do código
    - name: Checkout código
      uses: actions/checkout@v4.2.2

    # Autenticação no GCP
    - name: Autenticação no GCP
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

    # Configurar Google Cloud SDK
    - name: Configurar Google Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: 'latest'

    # Instalar gke-gcloud-auth-plugin
    - name: Instalar gke-gcloud-auth-plugin
      run: |
       curl -sfL https://sdk.cloud.google.com | bash
       source ~/.bashrc
       gcloud components install gke-gcloud-auth-plugin

    # Configurar credenciais do Kubernetes
    - name: Configurar credenciais do Cluster GKE
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
          --zone ${{ secrets.GKE_ZONE }} \
          --project ${{ secrets.GCP_PROJECT_ID }}

    # Deploy no Kubernetes
    - name: Deploy no Kubernetes
      uses: Azure/k8s-deploy@v5
      with:
        manifests: |
          ./k8s/deployment.yaml
        images: |
          vento123/aula-primeira-pipeline:v${{ github.run_number }}
        strategy: blue-green

    # # Verificar status do deployment
    # - name: Verificar Status do Deployment
    #   run: |
    #     kubectl rollout status deployment/meu-app-deployment
    #     kubectl get deployments